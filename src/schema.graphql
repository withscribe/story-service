# import Story from './generated/prisma.graphql'
# import Submission from './generated/prisma.graphql'
# import SavedObject from './generated/prisma.graphql'

type Query {
  #story queries
  allStories: [Story]
  stories(searchString: String!): [Story!]!
  storyById(storyID: ID!): Story
  storiesByProfileId(profileId: ID!): [Story!]!
  searchByKeyword(searchString: String!): [Story!]!
  searchByAuthor(username: String!): [Story!]!
  searchByTitle(title: String!): [Story]
  searchByDescription(description: String!): [Story]
  #submission queries
  allSubmissions: [Submission]
  getSubmissionsByFlag(flag: Boolean!): [Submission!]!
  #character queries
}

type Mutation {
  #submission mutations
  createSubmission(flag: Boolean): Submission 
  flagSubmission(submissionID: ID): Submission 
  
  #story mutations
  submitStory(
    title: String!, 
    description: String!,
    author: String!
    content: String, 
    profileId: ID, 
    submission: ID
  ): Story

  updateStory(
    id: ID!
    title: String,
    description: String,
    content: String
  ): Story

  deleteStory(
    id: ID!
  ): Story

  cloneStory(
    parentStoryId: ID,
    profileId: ID
  ): Story
  
  #will need the gateway for this - creating bookmarks or saved items in the db with a user and any object
  bookmarkContent(
    userId: ID,
    objectId: ID,
    type: SavedObjectType
  ): SavedObject

  likeStory(
    storyId: ID,
  ) : Story
  #character mutations
  #createIndependentCharacter()
}

