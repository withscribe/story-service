# source: http://localhost:4466
# timestamp: Wed Oct 24 2018 11:26:30 GMT-0400 (Eastern Daylight Time)

type AggregateContribution {
  count: Int!
}

type AggregateStory {
  count: Int!
}

type BatchPayload {
  """The number of nodes that have been affected by the Batch operation."""
  count: Long!
}

type Contribution implements Node {
  id: ID!
  forkId: ID
  contributorProfileId: ID
  authorProfileId: ID
  content: String
  comment: String
}

"""A connection to a list of items."""
type ContributionConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [ContributionEdge]!
  aggregate: AggregateContribution!
}

input ContributionCreateInput {
  forkId: ID
  contributorProfileId: ID
  authorProfileId: ID
  content: String
  comment: String
}

"""An edge in a connection."""
type ContributionEdge {
  """The item at the end of the edge."""
  node: Contribution!

  """A cursor for use in pagination."""
  cursor: String!
}

enum ContributionOrderByInput {
  id_ASC
  id_DESC
  forkId_ASC
  forkId_DESC
  contributorProfileId_ASC
  contributorProfileId_DESC
  authorProfileId_ASC
  authorProfileId_DESC
  content_ASC
  content_DESC
  comment_ASC
  comment_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type ContributionPreviousValues {
  id: ID!
  forkId: ID
  contributorProfileId: ID
  authorProfileId: ID
  content: String
  comment: String
}

type ContributionSubscriptionPayload {
  mutation: MutationType!
  node: Contribution
  updatedFields: [String!]
  previousValues: ContributionPreviousValues
}

input ContributionSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [ContributionSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [ContributionSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ContributionSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: ContributionWhereInput
}

input ContributionUpdateInput {
  forkId: ID
  contributorProfileId: ID
  authorProfileId: ID
  content: String
  comment: String
}

input ContributionWhereInput {
  """Logical AND on all given filters."""
  AND: [ContributionWhereInput!]

  """Logical OR on all given filters."""
  OR: [ContributionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ContributionWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  forkId: ID

  """All values that are not equal to given value."""
  forkId_not: ID

  """All values that are contained in given list."""
  forkId_in: [ID!]

  """All values that are not contained in given list."""
  forkId_not_in: [ID!]

  """All values less than the given value."""
  forkId_lt: ID

  """All values less than or equal the given value."""
  forkId_lte: ID

  """All values greater than the given value."""
  forkId_gt: ID

  """All values greater than or equal the given value."""
  forkId_gte: ID

  """All values containing the given string."""
  forkId_contains: ID

  """All values not containing the given string."""
  forkId_not_contains: ID

  """All values starting with the given string."""
  forkId_starts_with: ID

  """All values not starting with the given string."""
  forkId_not_starts_with: ID

  """All values ending with the given string."""
  forkId_ends_with: ID

  """All values not ending with the given string."""
  forkId_not_ends_with: ID
  contributorProfileId: ID

  """All values that are not equal to given value."""
  contributorProfileId_not: ID

  """All values that are contained in given list."""
  contributorProfileId_in: [ID!]

  """All values that are not contained in given list."""
  contributorProfileId_not_in: [ID!]

  """All values less than the given value."""
  contributorProfileId_lt: ID

  """All values less than or equal the given value."""
  contributorProfileId_lte: ID

  """All values greater than the given value."""
  contributorProfileId_gt: ID

  """All values greater than or equal the given value."""
  contributorProfileId_gte: ID

  """All values containing the given string."""
  contributorProfileId_contains: ID

  """All values not containing the given string."""
  contributorProfileId_not_contains: ID

  """All values starting with the given string."""
  contributorProfileId_starts_with: ID

  """All values not starting with the given string."""
  contributorProfileId_not_starts_with: ID

  """All values ending with the given string."""
  contributorProfileId_ends_with: ID

  """All values not ending with the given string."""
  contributorProfileId_not_ends_with: ID
  authorProfileId: ID

  """All values that are not equal to given value."""
  authorProfileId_not: ID

  """All values that are contained in given list."""
  authorProfileId_in: [ID!]

  """All values that are not contained in given list."""
  authorProfileId_not_in: [ID!]

  """All values less than the given value."""
  authorProfileId_lt: ID

  """All values less than or equal the given value."""
  authorProfileId_lte: ID

  """All values greater than the given value."""
  authorProfileId_gt: ID

  """All values greater than or equal the given value."""
  authorProfileId_gte: ID

  """All values containing the given string."""
  authorProfileId_contains: ID

  """All values not containing the given string."""
  authorProfileId_not_contains: ID

  """All values starting with the given string."""
  authorProfileId_starts_with: ID

  """All values not starting with the given string."""
  authorProfileId_not_starts_with: ID

  """All values ending with the given string."""
  authorProfileId_ends_with: ID

  """All values not ending with the given string."""
  authorProfileId_not_ends_with: ID
  content: String

  """All values that are not equal to given value."""
  content_not: String

  """All values that are contained in given list."""
  content_in: [String!]

  """All values that are not contained in given list."""
  content_not_in: [String!]

  """All values less than the given value."""
  content_lt: String

  """All values less than or equal the given value."""
  content_lte: String

  """All values greater than the given value."""
  content_gt: String

  """All values greater than or equal the given value."""
  content_gte: String

  """All values containing the given string."""
  content_contains: String

  """All values not containing the given string."""
  content_not_contains: String

  """All values starting with the given string."""
  content_starts_with: String

  """All values not starting with the given string."""
  content_not_starts_with: String

  """All values ending with the given string."""
  content_ends_with: String

  """All values not ending with the given string."""
  content_not_ends_with: String
  comment: String

  """All values that are not equal to given value."""
  comment_not: String

  """All values that are contained in given list."""
  comment_in: [String!]

  """All values that are not contained in given list."""
  comment_not_in: [String!]

  """All values less than the given value."""
  comment_lt: String

  """All values less than or equal the given value."""
  comment_lte: String

  """All values greater than the given value."""
  comment_gt: String

  """All values greater than or equal the given value."""
  comment_gte: String

  """All values containing the given string."""
  comment_contains: String

  """All values not containing the given string."""
  comment_not_contains: String

  """All values starting with the given string."""
  comment_starts_with: String

  """All values not starting with the given string."""
  comment_not_starts_with: String

  """All values ending with the given string."""
  comment_ends_with: String

  """All values not ending with the given string."""
  comment_not_ends_with: String
}

input ContributionWhereUniqueInput {
  id: ID
}

"""
The `Long` scalar type represents non-fractional signed whole numeric values.
Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long

type Mutation {
  createStory(data: StoryCreateInput!): Story!
  createContribution(data: ContributionCreateInput!): Contribution!
  updateStory(data: StoryUpdateInput!, where: StoryWhereUniqueInput!): Story
  updateContribution(data: ContributionUpdateInput!, where: ContributionWhereUniqueInput!): Contribution
  deleteStory(where: StoryWhereUniqueInput!): Story
  deleteContribution(where: ContributionWhereUniqueInput!): Contribution
  upsertStory(where: StoryWhereUniqueInput!, create: StoryCreateInput!, update: StoryUpdateInput!): Story!
  upsertContribution(where: ContributionWhereUniqueInput!, create: ContributionCreateInput!, update: ContributionUpdateInput!): Contribution!
  updateManyStories(data: StoryUpdateInput!, where: StoryWhereInput): BatchPayload!
  updateManyContributions(data: ContributionUpdateInput!, where: ContributionWhereInput): BatchPayload!
  deleteManyStories(where: StoryWhereInput): BatchPayload!
  deleteManyContributions(where: ContributionWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

"""An object with an ID"""
interface Node {
  """The id of the object."""
  id: ID!
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String

  """When paginating forwards, the cursor to continue."""
  endCursor: String
}

type Query {
  stories(where: StoryWhereInput, orderBy: StoryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Story]!
  contributions(where: ContributionWhereInput, orderBy: ContributionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Contribution]!
  story(where: StoryWhereUniqueInput!): Story
  contribution(where: ContributionWhereUniqueInput!): Contribution
  storiesConnection(where: StoryWhereInput, orderBy: StoryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): StoryConnection!
  contributionsConnection(where: ContributionWhereInput, orderBy: ContributionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ContributionConnection!

  """Fetches an object given its ID"""
  node(
    """The ID of an object"""
    id: ID!
  ): Node
}

type Story implements Node {
  id: ID!
  authorId: ID
  nonAuthorId: ID
  parentStoryId: ID
  author: String
  coAuthors: [ID!]!
  isCloned: Boolean
  isForked: Boolean
  contributionPending: Boolean
  title: String!
  description: String
  content: String
  share: Boolean
  views: Int
  likes: Int
  clones: Int
  contributions: Int
}

"""A connection to a list of items."""
type StoryConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [StoryEdge]!
  aggregate: AggregateStory!
}

input StoryCreatecoAuthorsInput {
  set: [ID!]
}

input StoryCreateInput {
  authorId: ID
  nonAuthorId: ID
  parentStoryId: ID
  author: String
  isCloned: Boolean
  isForked: Boolean
  contributionPending: Boolean
  title: String!
  description: String
  content: String
  share: Boolean
  views: Int
  likes: Int
  clones: Int
  contributions: Int
  coAuthors: StoryCreatecoAuthorsInput
}

"""An edge in a connection."""
type StoryEdge {
  """The item at the end of the edge."""
  node: Story!

  """A cursor for use in pagination."""
  cursor: String!
}

enum StoryOrderByInput {
  id_ASC
  id_DESC
  authorId_ASC
  authorId_DESC
  nonAuthorId_ASC
  nonAuthorId_DESC
  parentStoryId_ASC
  parentStoryId_DESC
  author_ASC
  author_DESC
  isCloned_ASC
  isCloned_DESC
  isForked_ASC
  isForked_DESC
  contributionPending_ASC
  contributionPending_DESC
  title_ASC
  title_DESC
  description_ASC
  description_DESC
  content_ASC
  content_DESC
  share_ASC
  share_DESC
  views_ASC
  views_DESC
  likes_ASC
  likes_DESC
  clones_ASC
  clones_DESC
  contributions_ASC
  contributions_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type StoryPreviousValues {
  id: ID!
  authorId: ID
  nonAuthorId: ID
  parentStoryId: ID
  author: String
  coAuthors: [ID!]!
  isCloned: Boolean
  isForked: Boolean
  contributionPending: Boolean
  title: String!
  description: String
  content: String
  share: Boolean
  views: Int
  likes: Int
  clones: Int
  contributions: Int
}

type StorySubscriptionPayload {
  mutation: MutationType!
  node: Story
  updatedFields: [String!]
  previousValues: StoryPreviousValues
}

input StorySubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [StorySubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [StorySubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [StorySubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: StoryWhereInput
}

input StoryUpdatecoAuthorsInput {
  set: [ID!]
}

input StoryUpdateInput {
  authorId: ID
  nonAuthorId: ID
  parentStoryId: ID
  author: String
  isCloned: Boolean
  isForked: Boolean
  contributionPending: Boolean
  title: String
  description: String
  content: String
  share: Boolean
  views: Int
  likes: Int
  clones: Int
  contributions: Int
  coAuthors: StoryUpdatecoAuthorsInput
}

input StoryWhereInput {
  """Logical AND on all given filters."""
  AND: [StoryWhereInput!]

  """Logical OR on all given filters."""
  OR: [StoryWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [StoryWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  authorId: ID

  """All values that are not equal to given value."""
  authorId_not: ID

  """All values that are contained in given list."""
  authorId_in: [ID!]

  """All values that are not contained in given list."""
  authorId_not_in: [ID!]

  """All values less than the given value."""
  authorId_lt: ID

  """All values less than or equal the given value."""
  authorId_lte: ID

  """All values greater than the given value."""
  authorId_gt: ID

  """All values greater than or equal the given value."""
  authorId_gte: ID

  """All values containing the given string."""
  authorId_contains: ID

  """All values not containing the given string."""
  authorId_not_contains: ID

  """All values starting with the given string."""
  authorId_starts_with: ID

  """All values not starting with the given string."""
  authorId_not_starts_with: ID

  """All values ending with the given string."""
  authorId_ends_with: ID

  """All values not ending with the given string."""
  authorId_not_ends_with: ID
  nonAuthorId: ID

  """All values that are not equal to given value."""
  nonAuthorId_not: ID

  """All values that are contained in given list."""
  nonAuthorId_in: [ID!]

  """All values that are not contained in given list."""
  nonAuthorId_not_in: [ID!]

  """All values less than the given value."""
  nonAuthorId_lt: ID

  """All values less than or equal the given value."""
  nonAuthorId_lte: ID

  """All values greater than the given value."""
  nonAuthorId_gt: ID

  """All values greater than or equal the given value."""
  nonAuthorId_gte: ID

  """All values containing the given string."""
  nonAuthorId_contains: ID

  """All values not containing the given string."""
  nonAuthorId_not_contains: ID

  """All values starting with the given string."""
  nonAuthorId_starts_with: ID

  """All values not starting with the given string."""
  nonAuthorId_not_starts_with: ID

  """All values ending with the given string."""
  nonAuthorId_ends_with: ID

  """All values not ending with the given string."""
  nonAuthorId_not_ends_with: ID
  parentStoryId: ID

  """All values that are not equal to given value."""
  parentStoryId_not: ID

  """All values that are contained in given list."""
  parentStoryId_in: [ID!]

  """All values that are not contained in given list."""
  parentStoryId_not_in: [ID!]

  """All values less than the given value."""
  parentStoryId_lt: ID

  """All values less than or equal the given value."""
  parentStoryId_lte: ID

  """All values greater than the given value."""
  parentStoryId_gt: ID

  """All values greater than or equal the given value."""
  parentStoryId_gte: ID

  """All values containing the given string."""
  parentStoryId_contains: ID

  """All values not containing the given string."""
  parentStoryId_not_contains: ID

  """All values starting with the given string."""
  parentStoryId_starts_with: ID

  """All values not starting with the given string."""
  parentStoryId_not_starts_with: ID

  """All values ending with the given string."""
  parentStoryId_ends_with: ID

  """All values not ending with the given string."""
  parentStoryId_not_ends_with: ID
  author: String

  """All values that are not equal to given value."""
  author_not: String

  """All values that are contained in given list."""
  author_in: [String!]

  """All values that are not contained in given list."""
  author_not_in: [String!]

  """All values less than the given value."""
  author_lt: String

  """All values less than or equal the given value."""
  author_lte: String

  """All values greater than the given value."""
  author_gt: String

  """All values greater than or equal the given value."""
  author_gte: String

  """All values containing the given string."""
  author_contains: String

  """All values not containing the given string."""
  author_not_contains: String

  """All values starting with the given string."""
  author_starts_with: String

  """All values not starting with the given string."""
  author_not_starts_with: String

  """All values ending with the given string."""
  author_ends_with: String

  """All values not ending with the given string."""
  author_not_ends_with: String
  isCloned: Boolean

  """All values that are not equal to given value."""
  isCloned_not: Boolean
  isForked: Boolean

  """All values that are not equal to given value."""
  isForked_not: Boolean
  contributionPending: Boolean

  """All values that are not equal to given value."""
  contributionPending_not: Boolean
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  content: String

  """All values that are not equal to given value."""
  content_not: String

  """All values that are contained in given list."""
  content_in: [String!]

  """All values that are not contained in given list."""
  content_not_in: [String!]

  """All values less than the given value."""
  content_lt: String

  """All values less than or equal the given value."""
  content_lte: String

  """All values greater than the given value."""
  content_gt: String

  """All values greater than or equal the given value."""
  content_gte: String

  """All values containing the given string."""
  content_contains: String

  """All values not containing the given string."""
  content_not_contains: String

  """All values starting with the given string."""
  content_starts_with: String

  """All values not starting with the given string."""
  content_not_starts_with: String

  """All values ending with the given string."""
  content_ends_with: String

  """All values not ending with the given string."""
  content_not_ends_with: String
  share: Boolean

  """All values that are not equal to given value."""
  share_not: Boolean
  views: Int

  """All values that are not equal to given value."""
  views_not: Int

  """All values that are contained in given list."""
  views_in: [Int!]

  """All values that are not contained in given list."""
  views_not_in: [Int!]

  """All values less than the given value."""
  views_lt: Int

  """All values less than or equal the given value."""
  views_lte: Int

  """All values greater than the given value."""
  views_gt: Int

  """All values greater than or equal the given value."""
  views_gte: Int
  likes: Int

  """All values that are not equal to given value."""
  likes_not: Int

  """All values that are contained in given list."""
  likes_in: [Int!]

  """All values that are not contained in given list."""
  likes_not_in: [Int!]

  """All values less than the given value."""
  likes_lt: Int

  """All values less than or equal the given value."""
  likes_lte: Int

  """All values greater than the given value."""
  likes_gt: Int

  """All values greater than or equal the given value."""
  likes_gte: Int
  clones: Int

  """All values that are not equal to given value."""
  clones_not: Int

  """All values that are contained in given list."""
  clones_in: [Int!]

  """All values that are not contained in given list."""
  clones_not_in: [Int!]

  """All values less than the given value."""
  clones_lt: Int

  """All values less than or equal the given value."""
  clones_lte: Int

  """All values greater than the given value."""
  clones_gt: Int

  """All values greater than or equal the given value."""
  clones_gte: Int
  contributions: Int

  """All values that are not equal to given value."""
  contributions_not: Int

  """All values that are contained in given list."""
  contributions_in: [Int!]

  """All values that are not contained in given list."""
  contributions_not_in: [Int!]

  """All values less than the given value."""
  contributions_lt: Int

  """All values less than or equal the given value."""
  contributions_lte: Int

  """All values greater than the given value."""
  contributions_gt: Int

  """All values greater than or equal the given value."""
  contributions_gte: Int
}

input StoryWhereUniqueInput {
  id: ID
}

type Subscription {
  story(where: StorySubscriptionWhereInput): StorySubscriptionPayload
  contribution(where: ContributionSubscriptionWhereInput): ContributionSubscriptionPayload
}
